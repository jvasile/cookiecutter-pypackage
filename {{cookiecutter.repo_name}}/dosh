#!/usr/bin/env bash
# Do - The Simplest Build Tool on Earth.
# Documentation and examples see https://github.com/8gears/do
#
SCRIPTNAME=`basename "$0"`
BASEDIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
cd $BASEDIR

help() {
   echo "clean-build - remove build artifacts"
   echo "clean-pyc - remove Python file artifacts"
   echo "lint - check style with flake8"
   echo "test - run tests quickly with the default Python"
   echo "test-all - run tests on every Python version with tox"
   echo "coverage - check code coverage quickly with the default Python"
   echo "docs - generate Sphinx HTML documentation, including API docs"
   echo "release - package and upload a release"
   echo "sdist - package"
}

clean() {
    clean-build
    clean-pyc
}

clean-build() {
    rm -fr build/
    rm -fr dist/
    rm -fr *.egg-info
}

clean-pyc() {
    find . -name '*.pyc' -exec rm -f {} +
    find . -name '*.pyo' -exec rm -f {} +
    find . -name '*~' -exec rm -f {} +
}

lint() {
    flake8 {{ cookiecutter.repo_name }} test
}

test() {
    py.test
}

test-all() { tox; }

coverage() {
    coverage run --source {{ cookiecutter.repo_name }} setup.py test
    coverage report -m
    coverage html
    open htmlcov/index.html
}

docs() {
    rm -f docs/{{ cookiecutter.repo_name }}.rst
    rm -f docs/modules.rst
    sphinx-apidoc -o docs/ {{ cookiecutter.repo_name }}
    make -C docs clean
    make -C docs html
    open docs/_build/html/index.html
}

release() {
    clean
    python setup.py sdist upload
    python setup.py bdist_wheel upload
}

sdist() {
    clean
    python setup.py sdist
    python setup.py bdist_wheel upload
    ls -l dist
}

"$@" # <- execute the task
[ "$#" -gt 0 ] || printf "Usage:\n\t./${SCRIPTNAME} %s\n" "($(compgen -A function | grep '^[^_]' | paste -sd '|' -))"

